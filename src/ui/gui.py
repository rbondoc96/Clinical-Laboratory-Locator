# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#pylint: disable=import-error

from PyQt5 import QtCore, QtGui, QtWidgets

from camelcase import CamelCase
from uszipcode import SearchEngine

from ui.workers.searchworker import SearchWorker

from navs.concentra import ConcentraSearch
from navs.labcorp import LabcorpSearch
from navs.gmaps import GMapsSearch

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1109, 926)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMaximumSize(QtCore.QSize(1109, 926))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(10)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: rgb(19, 19, 19);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.formTitle = QtWidgets.QLabel(self.centralwidget)
        self.formTitle.setGeometry(QtCore.QRect(200, 30, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.formTitle.setFont(font)
        self.formTitle.setStyleSheet("color: rgb(255, 255, 255);")
        self.formTitle.setObjectName("formTitle")
        self.searchButton = QtWidgets.QPushButton(self.centralwidget)
        self.searchButton.setGeometry(QtCore.QRect(40, 810, 541, 41))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.searchButton.setFont(font)
        self.searchButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.searchButton.setStyleSheet("color: rgb(255,255,255);\n"
"border: 2px solid rgb(255,255,255);\n"
"border-radius: 12px;")
        self.searchButton.setObjectName("searchButton")
        self.outputBox = QtWidgets.QTextEdit(self.centralwidget)
        self.outputBox.setGeometry(QtCore.QRect(620, 30, 451, 821))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(8)
        self.outputBox.setFont(font)
        self.outputBox.setStyleSheet("color: rgb(118, 188, 171);\n"
"background-color: rgb(66, 66, 66);")
        self.outputBox.setReadOnly(True)
        self.outputBox.setObjectName("outputBox")
        self.labcorpGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.labcorpGroup.setGeometry(QtCore.QRect(40, 190, 241, 151))
        self.labcorpGroup.setStyleSheet("color: rgb(255, 255, 255);\n"
"font-family: \"Nirmala UI\";")
        self.labcorpGroup.setTitle("")
        self.labcorpGroup.setObjectName("labcorpGroup")
        self.labcorpBloodwork = QtWidgets.QRadioButton(self.labcorpGroup)
        self.labcorpBloodwork.setGeometry(QtCore.QRect(60, 50, 81, 18))
        self.labcorpBloodwork.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.labcorpBloodwork.setObjectName("labcorpBloodwork")
        self.labcorpCheckbox = QtWidgets.QCheckBox(self.labcorpGroup)
        self.labcorpCheckbox.setGeometry(QtCore.QRect(30, 20, 81, 18))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(87)
        self.labcorpCheckbox.setFont(font)
        self.labcorpCheckbox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.labcorpCheckbox.setStyleSheet("font-weight: 700;\n"
"font-family: \"Nirmala UI\";")
        self.labcorpCheckbox.setObjectName("labcorpCheckbox")
        self.labcorpDSCollect = QtWidgets.QRadioButton(self.labcorpGroup)
        self.labcorpDSCollect.setGeometry(QtCore.QRect(60, 110, 121, 18))
        self.labcorpDSCollect.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.labcorpDSCollect.setObjectName("labcorpDSCollect")
        self.labcorpDSInstant = QtWidgets.QRadioButton(self.labcorpGroup)
        self.labcorpDSInstant.setGeometry(QtCore.QRect(60, 80, 131, 18))
        self.labcorpDSInstant.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.labcorpDSInstant.setObjectName("labcorpDSInstant")
        self.questGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.questGroup.setGeometry(QtCore.QRect(310, 190, 271, 151))
        self.questGroup.setStyleSheet("color: rgb(255, 255, 255);\n"
"font-family: \"Nirmala UI\";")
        self.questGroup.setTitle("")
        self.questGroup.setObjectName("questGroup")
        self.questDSElectronic = QtWidgets.QRadioButton(self.questGroup)
        self.questDSElectronic.setGeometry(QtCore.QRect(60, 80, 161, 18))
        self.questDSElectronic.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.questDSElectronic.setObjectName("questDSElectronic")
        self.questTspot = QtWidgets.QRadioButton(self.questGroup)
        self.questTspot.setGeometry(QtCore.QRect(60, 50, 101, 18))
        self.questTspot.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.questTspot.setObjectName("questTspot")
        self.questCheckbox = QtWidgets.QCheckBox(self.questGroup)
        self.questCheckbox.setGeometry(QtCore.QRect(30, 20, 151, 18))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(87)
        self.questCheckbox.setFont(font)
        self.questCheckbox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.questCheckbox.setStyleSheet("font-weight: 700;\n"
"font-family: \"Nirmala UI\";")
        self.questCheckbox.setObjectName("questCheckbox")
        self.gmapsGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.gmapsGroup.setGeometry(QtCore.QRect(40, 360, 541, 91))
        self.gmapsGroup.setStyleSheet("color: rgb(255, 255, 255);\n"
"font-family: \"Nirmala UI\";")
        self.gmapsGroup.setTitle("")
        self.gmapsGroup.setObjectName("gmapsGroup")
        self.gmapsCheckbox = QtWidgets.QCheckBox(self.gmapsGroup)
        self.gmapsCheckbox.setGeometry(QtCore.QRect(30, 20, 171, 18))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(87)
        self.gmapsCheckbox.setFont(font)
        self.gmapsCheckbox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.gmapsCheckbox.setStyleSheet("font-weight: 700;\n"
"font-family: \"Nirmala UI\";")
        self.gmapsCheckbox.setObjectName("gmapsCheckbox")
        self.gmapsUrgentCare = QtWidgets.QRadioButton(self.gmapsGroup)
        self.gmapsUrgentCare.setGeometry(QtCore.QRect(60, 50, 101, 18))
        self.gmapsUrgentCare.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.gmapsUrgentCare.setObjectName("gmapsUrgentCare")
        self.gmapsOccuHealth = QtWidgets.QRadioButton(self.gmapsGroup)
        self.gmapsOccuHealth.setGeometry(QtCore.QRect(210, 50, 141, 18))
        self.gmapsOccuHealth.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.gmapsOccuHealth.setObjectName("gmapsOccuHealth")
        self.escreenGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.escreenGroup.setGeometry(QtCore.QRect(40, 470, 541, 241))
        self.escreenGroup.setStyleSheet("color: rgb(255, 255, 255);\n"
"font-family: \"Nirmala UI\";")
        self.escreenGroup.setTitle("")
        self.escreenGroup.setObjectName("escreenGroup")
        self.escreenTiters = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenTiters.setGeometry(QtCore.QRect(220, 80, 81, 18))
        self.escreenTiters.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenTiters.setObjectName("escreenTiters")
        self.escreenHepBVaccine = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenHepBVaccine.setGeometry(QtCore.QRect(350, 140, 141, 18))
        self.escreenHepBVaccine.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenHepBVaccine.setObjectName("escreenHepBVaccine")
        self.escreenFluVaccine = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenFluVaccine.setGeometry(QtCore.QRect(350, 170, 141, 18))
        self.escreenFluVaccine.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenFluVaccine.setObjectName("escreenFluVaccine")
        self.escreenQgold = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenQgold.setGeometry(QtCore.QRect(220, 110, 71, 18))
        self.escreenQgold.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenQgold.setObjectName("escreenQgold")
        self.escreenDSCollect = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenDSCollect.setGeometry(QtCore.QRect(60, 140, 141, 18))
        self.escreenDSCollect.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenDSCollect.setObjectName("escreenDSCollect")
        self.escreenPpd = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenPpd.setGeometry(QtCore.QRect(220, 170, 71, 18))
        self.escreenPpd.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenPpd.setObjectName("escreenPpd")
        self.escreenMmrVaccine = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenMmrVaccine.setGeometry(QtCore.QRect(350, 80, 101, 18))
        self.escreenMmrVaccine.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenMmrVaccine.setObjectName("escreenMmrVaccine")
        self.escreenVaricellaVaccine = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenVaricellaVaccine.setGeometry(QtCore.QRect(350, 110, 121, 18))
        self.escreenVaricellaVaccine.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenVaricellaVaccine.setObjectName("escreenVaricellaVaccine")
        self.escreenPhys = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenPhys.setGeometry(QtCore.QRect(60, 80, 81, 18))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setKerning(True)
        self.escreenPhys.setFont(font)
        self.escreenPhys.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenPhys.setObjectName("escreenPhys")
        self.escreenTspot = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenTspot.setGeometry(QtCore.QRect(220, 140, 71, 18))
        self.escreenTspot.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenTspot.setObjectName("escreenTspot")
        self.escreenCXR = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenCXR.setGeometry(QtCore.QRect(220, 200, 91, 18))
        self.escreenCXR.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenCXR.setObjectName("escreenCXR")
        self.escreenCheckbox = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenCheckbox.setGeometry(QtCore.QRect(30, 30, 81, 18))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(87)
        self.escreenCheckbox.setFont(font)
        self.escreenCheckbox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenCheckbox.setStyleSheet("font-weight: 700;\n"
"font-family: \"Nirmala UI\";")
        self.escreenCheckbox.setObjectName("escreenCheckbox")
        self.escreenFit = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenFit.setGeometry(QtCore.QRect(60, 110, 131, 18))
        self.escreenFit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenFit.setObjectName("escreenFit")
        self.escreenTdapVaccine = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenTdapVaccine.setGeometry(QtCore.QRect(350, 200, 101, 18))
        self.escreenTdapVaccine.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenTdapVaccine.setObjectName("escreenTdapVaccine")
        self.escreenDSXcup = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenDSXcup.setGeometry(QtCore.QRect(60, 170, 141, 18))
        self.escreenDSXcup.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenDSXcup.setObjectName("escreenDSXcup")
        self.escreenDSXcup_2 = QtWidgets.QCheckBox(self.escreenGroup)
        self.escreenDSXcup_2.setGeometry(QtCore.QRect(60, 200, 141, 18))
        self.escreenDSXcup_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.escreenDSXcup_2.setObjectName("escreenDSXcup_2")
        self.escreenUsername = QtWidgets.QLineEdit(self.escreenGroup)
        self.escreenUsername.setGeometry(QtCore.QRect(140, 40, 161, 20))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        self.escreenUsername.setFont(font)
        self.escreenUsername.setStyleSheet("border-color: rgb(255, 255, 255);\n"
"background-color: rgb(228, 228, 228);\n"
"color: rgb(0,0,0);")
        self.escreenUsername.setObjectName("escreenUsername")
        self.escreenPassword = QtWidgets.QLineEdit(self.escreenGroup)
        self.escreenPassword.setGeometry(QtCore.QRect(330, 40, 171, 20))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        self.escreenPassword.setFont(font)
        self.escreenPassword.setStyleSheet("border-color: rgb(255, 255, 255);\n"
"background-color: rgb(228, 228, 228);\n"
"color: rgb(0,0,0);")
        self.escreenPassword.setEchoMode(QtWidgets.QLineEdit.Password)
        self.escreenPassword.setObjectName("escreenPassword")
        self.escreenUsernameLabel = QtWidgets.QLabel(self.escreenGroup)
        self.escreenUsernameLabel.setGeometry(QtCore.QRect(140, 20, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(87)
        self.escreenUsernameLabel.setFont(font)
        self.escreenUsernameLabel.setStyleSheet("font-weight: 700;\n"
"font-family: \"Nirmala UI\";")
        self.escreenUsernameLabel.setObjectName("escreenUsernameLabel")
        self.escreenPasswordLabel = QtWidgets.QLabel(self.escreenGroup)
        self.escreenPasswordLabel.setGeometry(QtCore.QRect(330, 20, 61, 16))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(87)
        self.escreenPasswordLabel.setFont(font)
        self.escreenPasswordLabel.setStyleSheet("font-weight: 700;\n"
"font-family: \"Nirmala UI\";")
        self.escreenPasswordLabel.setObjectName("escreenPasswordLabel")
        self.concentraGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.concentraGroup.setGeometry(QtCore.QRect(40, 730, 541, 61))
        self.concentraGroup.setStyleSheet("color: rgb(255, 255, 255);")
        self.concentraGroup.setTitle("")
        self.concentraGroup.setObjectName("concentraGroup")
        self.concentraCheckbox = QtWidgets.QCheckBox(self.concentraGroup)
        self.concentraCheckbox.setGeometry(QtCore.QRect(30, 20, 191, 18))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.concentraCheckbox.setFont(font)
        self.concentraCheckbox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.concentraCheckbox.setObjectName("concentraCheckbox")
        self.metadataGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.metadataGroup.setGeometry(QtCore.QRect(40, 79, 541, 91))
        self.metadataGroup.setTitle("")
        self.metadataGroup.setObjectName("metadataGroup")
        self.zipcode = QtWidgets.QLineEdit(self.metadataGroup)
        self.zipcode.setGeometry(QtCore.QRect(330, 50, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        self.zipcode.setFont(font)
        self.zipcode.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.zipcode.setStyleSheet("border-color: rgb(255, 255, 255);\n"
"background-color: rgb(228, 228, 228);")
        self.zipcode.setMaxLength(5)
        self.zipcode.setObjectName("zipcode")
        self.zipcodeLabel = QtWidgets.QLabel(self.metadataGroup)
        self.zipcodeLabel.setGeometry(QtCore.QRect(330, 20, 61, 20))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.zipcodeLabel.setFont(font)
        self.zipcodeLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.zipcodeLabel.setObjectName("zipcodeLabel")
        self.radius = QtWidgets.QComboBox(self.metadataGroup)
        self.radius.setGeometry(QtCore.QRect(430, 50, 75, 22))
        self.radius.setStyleSheet("background-color: rgb(228, 228, 228);")
        self.radius.setObjectName("radius")
        self.radius.addItem("")
        self.radius.addItem("")
        self.radius.addItem("")
        self.radius.addItem("")
        self.radius.addItem("")
        self.radiusLabel = QtWidgets.QLabel(self.metadataGroup)
        self.radiusLabel.setGeometry(QtCore.QRect(430, 20, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.radiusLabel.setFont(font)
        self.radiusLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.radiusLabel.setObjectName("radiusLabel")
        self.fullNameLabel = QtWidgets.QLabel(self.metadataGroup)
        self.fullNameLabel.setGeometry(QtCore.QRect(30, 20, 81, 20))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.fullNameLabel.setFont(font)
        self.fullNameLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.fullNameLabel.setObjectName("fullNameLabel")
        self.fullName = QtWidgets.QLineEdit(self.metadataGroup)
        self.fullName.setGeometry(QtCore.QRect(30, 50, 271, 21))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        self.fullName.setFont(font)
        self.fullName.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.fullName.setStyleSheet("border-color: rgb(255, 255, 255);\n"
"background-color: rgb(228, 228, 228);")
        self.fullName.setMaxLength(32767)
        self.fullName.setObjectName("fullName")
        self.concentraGroup.raise_()
        self.escreenGroup.raise_()
        self.gmapsGroup.raise_()
        self.questGroup.raise_()
        self.formTitle.raise_()
        self.searchButton.raise_()
        self.outputBox.raise_()
        self.labcorpGroup.raise_()
        self.metadataGroup.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1109, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(59, 59, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 170, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Link, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 85, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.LinkVisited, brush)
        brush = QtGui.QBrush(QtGui.QColor(145, 145, 156))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(133, 132, 141))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(59, 59, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 170, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Link, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 85, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.LinkVisited, brush)
        brush = QtGui.QBrush(QtGui.QColor(145, 145, 156))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(133, 132, 141))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(19, 19, 19))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 120, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 170, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Link, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 85, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.LinkVisited, brush)
        brush = QtGui.QBrush(QtGui.QColor(145, 145, 156))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(133, 132, 141))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.menubar.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        self.menubar.setFont(font)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setStyleSheet("color: rgb(255,255,255);")
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.windowClose = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        self.windowClose.setFont(font)
        self.windowClose.setObjectName("windowClose")
        self.menuFile.addAction(self.windowClose)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.formTitle.setText(_translate("MainWindow", "Clinic Searcher"))
        self.searchButton.setText(_translate("MainWindow", "Search Locations"))
        self.labcorpBloodwork.setText(_translate("MainWindow", "Bloodwork"))
        self.labcorpCheckbox.setText(_translate("MainWindow", "LabCorp"))
        self.labcorpDSCollect.setText(_translate("MainWindow", "Drug Screen Collect"))
        self.labcorpDSInstant.setText(_translate("MainWindow", "Drug Screen POCT"))
        self.questDSElectronic.setText(_translate("MainWindow", "Electronic Drug Screens"))
        self.questTspot.setText(_translate("MainWindow", "TSPOT TB Test"))
        self.questCheckbox.setText(_translate("MainWindow", "Quest Diagnostics"))
        self.gmapsCheckbox.setText(_translate("MainWindow", "Google Maps Search"))
        self.gmapsUrgentCare.setText(_translate("MainWindow", "Urgent Care"))
        self.gmapsOccuHealth.setText(_translate("MainWindow", "Occupational Health"))
        self.escreenTiters.setText(_translate("MainWindow", "Titers"))
        self.escreenHepBVaccine.setText(_translate("MainWindow", "Hepatitis B Vaccine"))
        self.escreenFluVaccine.setText(_translate("MainWindow", "Influenza Vaccine"))
        self.escreenQgold.setText(_translate("MainWindow", "QGold"))
        self.escreenDSCollect.setText(_translate("MainWindow", "UDS Collect"))
        self.escreenPpd.setText(_translate("MainWindow", "PPD"))
        self.escreenMmrVaccine.setText(_translate("MainWindow", "MMR Vaccine"))
        self.escreenVaricellaVaccine.setText(_translate("MainWindow", "Varicella Vaccine"))
        self.escreenPhys.setText(_translate("MainWindow", "Physicals"))
        self.escreenTspot.setText(_translate("MainWindow", "TSPOT"))
        self.escreenCXR.setText(_translate("MainWindow", "Chest X-Ray"))
        self.escreenCheckbox.setText(_translate("MainWindow", "eScreen"))
        self.escreenFit.setText(_translate("MainWindow", "QLT Respirator Fit"))
        self.escreenTdapVaccine.setText(_translate("MainWindow", "TDaP Vaccine"))
        self.escreenDSXcup.setText(_translate("MainWindow", "UDS POCT (xCup)"))
        self.escreenDSXcup_2.setText(_translate("MainWindow", "Hair DS Collect"))
        self.escreenUsernameLabel.setText(_translate("MainWindow", "Username"))
        self.escreenPasswordLabel.setText(_translate("MainWindow", "Password"))
        self.concentraCheckbox.setText(_translate("MainWindow", "Concentra Urgent Care"))
        self.zipcodeLabel.setText(_translate("MainWindow", "Zip Code"))
        self.radius.setItemText(0, _translate("MainWindow", "10"))
        self.radius.setItemText(1, _translate("MainWindow", "25"))
        self.radius.setItemText(2, _translate("MainWindow", "50"))
        self.radius.setItemText(3, _translate("MainWindow", "75"))
        self.radius.setItemText(4, _translate("MainWindow", "100"))
        self.radiusLabel.setText(_translate("MainWindow", "Radius (mi)"))
        self.fullNameLabel.setText(_translate("MainWindow", "Full Name"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.windowClose.setText(_translate("MainWindow", "Close"))
        self.windowClose.setShortcut(_translate("MainWindow", "Ctrl+W"))

    def enable_labcorp_buttons(self, enable):
        self.labcorpBloodwork.setEnabled(enable)
        self.labcorpDSCollect.setEnabled(enable)
        self.labcorpDSInstant.setEnabled(enable)
    
    def toggle_labcorp_buttons(self):
        self.enable_labcorp_buttons(
            not self.labcorpBloodwork.isEnabled()
        )

    def enable_quest_buttons(self, enable):
        self.questTspot.setEnabled(enable)
        self.questDSElectronic.setEnabled(enable)

    def toggle_quest_buttons(self):
        self.enable_quest_buttons(
            not self.questTspot.isEnabled()
        )
    
    def enable_gmaps_buttons(self, enable):
        self.gmapsUrgentCare.setEnabled(enable)
        self.gmapsOccuHealth.setEnabled(enable)
    
    def toggle_gmaps_buttons(self):
        self.enable_gmaps_buttons(
            not self.gmapsUrgentCare.isEnabled()
        )

    def enable_escreen_buttons(self, enable):
        self.escreenPhys.setEnabled(enable)
        self.escreenFit.setEnabled(enable)
        self.escreenDSCollect.setEnabled(enable)
        self.escreenDSXcup.setEnabled(enable)
        self.escreenCXR.setEnabled(enable)
        self.escreenTiters.setEnabled(enable)
        self.escreenQgold.setEnabled(enable)
        self.escreenTspot.setEnabled(enable)
        self.escreenPpd.setEnabled(enable)
        self.escreenTdapVaccine.setEnabled(enable)
        self.escreenMmrVaccine.setEnabled(enable)
        self.escreenVaricellaVaccine.setEnabled(enable)
        self.escreenHepBVaccine.setEnabled(enable)
        self.escreenFluVaccine.setEnabled(enable)

    def toggle_escreen_buttons(self):
        self.enable_escreen_buttons(
            not self.escreenPhys.isEnabled()
        )

    def init_logic(self):
        self.enable_labcorp_buttons(False)
        self.enable_quest_buttons(False)
        self.enable_gmaps_buttons(False)
        self.enable_escreen_buttons(False)

        self.labcorpCheckbox.clicked.connect(self.toggle_labcorp_buttons)
        self.questCheckbox.clicked.connect(self.toggle_quest_buttons)
        self.gmapsCheckbox.clicked.connect(self.toggle_gmaps_buttons)
        self.escreenCheckbox.clicked.connect(self.toggle_escreen_buttons)

        self.searchButton.clicked.connect(self.search)

    def add_labcorp_text(self, text):
        if type(text) is list and len(text) > 0:
            camel = CamelCase()

            self.outputBox.append("\n=================== LabCorp ====================")
            for item in text:
                distance = item.get("distance")
                address = item.get("address").strip()
                hours = item.get("hours")
                phone_fax = item.get("phone_fax")
                services = item.get("services")
                
                self.outputBox.append(f"Distance: {distance}")
                self.outputBox.append(f"Address: {address}")
                self.outputBox.append(f"Hours: {hours}")
                self.outputBox.append(f"Phone {phone_fax}")
                self.outputBox.append(f"Services: {services}")
                self.outputBox.append("====================")

        else:
            self.outputBox.append("\nNo LabCorp locations were found.")

    def add_gmaps_text(self, text):
        if type(text) is list and len(text) > 0:
            self.outputBox.append("\n================= Google Maps ==================")

            for item in text:
                name = item.get("name")
                distance = item.get("distance")
                drive_time = item.get("drive_time")
                address = item.get("address")
                hours = item.get("hours")
                phone = item.get("phone")
                
                self.outputBox.append(f"Clinic: {name}")
                self.outputBox.append(f"Distance: {distance}")
                self.outputBox.append(f"Drive Time: {drive_time}")
                self.outputBox.append(f"Address: {address}")
                self.outputBox.append(f"Hours: {hours}")
                self.outputBox.append(f"Phone {phone}")
                self.outputBox.append("====================")

        else:
            self.outputBox.append("\nNo locations were found.")

    def add_concentra_text(self, text):
        if type(text) is list and len(text) > 0:
            self.outputBox.append("\n=============== Concentra Urgent Care ===============")            
            for obj in text:
                self.outputBox.append(f"Branch: {obj.get('name')}")
                self.outputBox.append(f"Distance: {obj.get('distance')}")
                self.outputBox.append(f"{obj.get('open_status')}")
                self.outputBox.append(f"{obj.get('address_line_1')}")

                if obj.get("address_line_2") is not None:
                    self.outputBox.append(f"{obj.get('address_line_2')}")

                self.outputBox.append(f"{obj.get('city')}{obj.get('state')} {obj.get('zipcode')}")
                self.outputBox.append(f"{obj.get('phone')}")
                self.outputBox.append(f"{obj.get('fax')}")
                self.outputBox.append(f"{obj.get('hours')}")
                self.outputBox.append("====================")
                
        else:
            self.outputBox.append("\nNo Concentra locations were found.")

    def search_complete(self):
        print('[ThreadPool] "Search Complete"')

    def search(self):
        
        name = self.fullName.text() if self.fullName.text() != "" else None
        zipcode = self.zipcode.text() if self.zipcode.text() != "" else None
        radius = self.radius.currentText()

        escreen_user = self.escreenUsername.text() \
             if self.escreenUsername.text() != "" else None
        escreen_pw = self.escreenPassword.text() if \
            self.escreenPassword.text() != "" else None

        labcorp_checked = self.labcorpCheckbox.checkState() > 0
        quest_checked = self.questCheckbox.checkState() > 0  
        gmaps_checked = self.gmapsCheckbox.checkState() > 0
        escreen_checked = self.escreenCheckbox.checkState() > 0
        concentra_checked = self.concentraCheckbox.checkState() > 0

        one_is_checked = labcorp_checked or quest_checked or \
            gmaps_checked or escreen_checked or concentra_checked

        if name is None:
            self.outputBox.setText("Please enter a name")
        if escreen_checked:
            if escreen_user is None:
                self.outputBox.append("Please enter a username for myeScreen")
            elif escreen_pw is None:
                self.outputBox.append("Please enter a password for myeScreen")
        if zipcode is not None:
            if len(zipcode) == 5:
                search = SearchEngine(simple_zipcode=True)
                query = search.by_zipcode(f"{zipcode}")

                # zipcode is None if the zipcode isn't in the uszipcode DB
                if query.zipcode is None:
                    self.outputBox.setText(
                        "Please enter a valid zipcode"
                    )
                elif one_is_checked:
                    self.outputBox.setText(f"[{name} :: {query.post_office_city} {query.zipcode}] Searching for these locations:")
                    if labcorp_checked:
                        self.outputBox.append("     - LabCorp")
                    if quest_checked:
                        self.outputBox.append("     - Quest Diagnostics")
                    if gmaps_checked:
                        self.outputBox.append("     - Google Maps")
                    if escreen_checked:
                        self.outputBox.append("     - eScreen Website")
                    if concentra_checked:
                        self.outputBox.append("     - Concentra Urgent Care")            
                    
                    # Activate search threads if the boxes are checked
                    self.threadpool = QtCore.QThreadPool()
                    if labcorp_checked:
                        if self.labcorpBloodwork.isChecked():
                            service = LabcorpSearch.BLOODWORK
                        elif self.labcorpDSCollect.isChecked():
                            service = LabcorpSearch.DRUG_SCREEN_COLLECTION
                        elif self.labcorpDSInstant.isChecked():
                            service = LabcorpSearch.DRUG_SCREEN_POCT
                        else:
                            service = LabcorpSearch.DRUG_SCREEN_COLLECTION

                        thread = SearchWorker(
                            LabcorpSearch, 
                            zipcode, 
                            radius=radius,
                            service=service
                        )
                        thread.signals.result.connect(self.add_labcorp_text)
                        thread.signals.finished.connect(self.search_complete)

                        self.threadpool.start(thread)
                    
                    if gmaps_checked:
                        if self.gmapsUrgentCare.isChecked():
                            keywords = GMapsSearch.URGENT_CARE
                        elif self.gmapsOccuHealth.isChecked():
                            keywords = GMapsSearch.OCCUPATIONAL_HEALTH
                        else:
                            keywords = GMapsSearch.URGENT_CARE
                        
                        thread = SearchWorker(
                            GMapsSearch,
                            zipcode,
                            limit=10,
                            keywords=keywords,
                        )
                        thread.signals.result.connect(self.add_gmaps_text)
                        thread.signals.finished.connect(self.search_complete)

                        self.threadpool.start(thread)

                    if escreen_checked:
                        self.outputBox.setText(f"Username: {escreen_user}")
                        self.outputBox.append(f"Password: {escreen_pw}")
                    if concentra_checked:
                        thread = SearchWorker(
                            ConcentraSearch,
                            zipcode,
                            limit=5,
                        )
                        thread.signals.result.connect(self.add_concentra_text)
                        thread.signals.finished.connect(self.search_complete)

                        self.threadpool.start(thread)                
                elif not one_is_checked:
                    self.outputBox.setText(
                        "Please select an option to search"
                    )

            else:
                self.outputBox.setText("Please enter a 5 digit zipcode")    

        elif zipcode is None:      
            self.outputBox.setText("Please enter a zipcode")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.init_logic()
    MainWindow.show()
    sys.exit(app.exec_())
